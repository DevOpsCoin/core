
diff --git a/.nvmrc b/.nvmrc
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/.nvmrc
@@
+v20.11.1
diff --git a/.prettierrc b/.prettierrc
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/.prettierrc
@@
+{
+  "semi": false,
+  "singleQuote": false,
+  "printWidth": 100
+}
diff --git a/.eslintrc.cjs b/.eslintrc.cjs
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/.eslintrc.cjs
@@
+module.exports = {
+  root: true,
+  parser: "@typescript-eslint/parser",
+  plugins: ["@typescript-eslint", "react-hooks", "jsx-a11y"],
+  extends: [
+    "next/core-web-vitals",
+    "eslint:recommended",
+    "plugin:@typescript-eslint/recommended",
+    "plugin:react-hooks/recommended",
+    "plugin:jsx-a11y/recommended",
+    "prettier"
+  ],
+  rules: {
+    "@typescript-eslint/no-explicit-any": "warn",
+    "react-hooks/exhaustive-deps": "warn"
+  }
+}
diff --git a/env.mjs b/env.mjs
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/env.mjs
@@
+import { z } from "zod"
+
+const EnvSchema = z.object({
+  NEXT_PUBLIC_SITE_URL: z.string().url(),
+  NEXT_PUBLIC_BSC_RPC: z.string().url().default("https://bsc-dataseed.binance.org/"),
+  NEXT_PUBLIC_BSC_CHAIN_ID: z.string().default("56"),
+  NEXTAUTH_SECRET: z.string().optional(),
+  INFURA_URL: z.string().url().optional(),
+})
+
+export const env = EnvSchema.parse(process.env)
diff --git a/content/constants.ts b/content/constants.ts
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/content/constants.ts
@@
+export const TAGLINE = "Dev culture meets degen"
+
+export const TOKEN = {
+  name: "DevOpsCoin",
+  symbol: "DEVOPS",
+  chain: "BSC",
+  decimals: 18,
+  totalSupply: 1_000_000_000,
+}
+
+export const WALLETS = {
+  founder: "0x963a41997614ae4c1EdCd284a8a62d071bF5697c",
+  treasury: "0x67eeD911443d2f7782cD5cc745Aa7B462CBaA13e",
+  community: "0x9ef262B2d9AD20bcDA0Ef9711d28323d9494142E",
+  shipIt: "0x8b9840649D223E8c7257c8FB6e0Fc1e8B5130597",
+  reserve: "0x48D5C591BEcB594D334b167e89853Fd8b8ddc56e",
+}
diff --git a/.husky/pre-commit b/.husky/pre-commit
new file mode 100755
index 0000000..1111111
--- /dev/null
+++ b/.husky/pre-commit
@@
+#!/bin/sh
+. "$(dirname "$0")/_/husky.sh"
+
+pnpm lint-staged
diff --git a/next.config.mjs b/next.config.mjs
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/next.config.mjs
@@
+/** @type {import('next').NextConfig} */
+const nextConfig = {
+  poweredByHeader: false,
+  async headers() {
+    return [
+      {
+        source: "/(.*)",
+        headers: [
+          { key: "X-Content-Type-Options", value: "nosniff" },
+          { key: "X-Frame-Options", value: "DENY" },
+          { key: "Referrer-Policy", value: "strict-origin-when-cross-origin" },
+          {
+            key: "Permissions-Policy",
+            value: "camera=(), microphone=(), geolocation=(), interest-cohort=()",
+          },
+        ],
+      },
+    ]
+  },
+}
+
+export default nextConfig
diff --git a/tailwind.config.ts b/tailwind.config.ts
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/tailwind.config.ts
@@
+import type { Config } from "tailwindcss"
+
+export default {
+  darkMode: "class",
+  content: ["./app/**/*.{ts,tsx}", "./components/**/*.{ts,tsx}"],
+  theme: {
+    extend: {
+      colors: {
+        brand: { teal: "#00B7B1" }
+      }
+    }
+  },
+  plugins: []
+} satisfies Config
diff --git a/tsconfig.json b/tsconfig.json
new file mode 100644
index 0000000..1111111
--- /dev/null
+++ b/tsconfig.json
@@
+{
+  "compilerOptions": {
+    "target": "ES2022",
+    "lib": ["ES2023", "DOM", "DOM.Iterable"],
+    "module": "ESNext",
+    "moduleResolution": "Bundler",
+    "baseUrl": ".",
+    "paths": { "@/*": ["./*"] },
+    "allowJs": false,
+    "checkJs": false,
+    "resolveJsonModule": true,
+    "isolatedModules": true,
+    "strict": true,
+    "noUncheckedIndexedAccess": true,
+    "noImplicitOverride": true,
+    "noFallthroughCasesInSwitch": true,
+    "skipLibCheck": true,
+    "jsx": "preserve",
+    "incremental": true
+  },
+  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx"],
+  "exclude": ["node_modules"]
+}
